# ---------------------------------------------------------------------------

#
# This file configures the New Relic Python Agent.
#
# The path to the configuration file should be supplied to the function
# newrelic.agent.initialize() when the agent is being initialized.
#
# The configuration file follows a structure similar to what you would
# find for Microsoft Windows INI files. For further information on the
# configuration file format see the Python ConfigParser documentation at:
#
#    http://docs.python.org/library/configparser.html
#
# For further discussion on the behaviour of the Python agent that can
# be configured via this configuration file see:
#
#    http://newrelic.com/docs/python/python-agent-configuration
#

# ---------------------------------------------------------------------------

# Here are the settings that are common to all environments.

[newrelic]

# You must specify the license key associated with your New
# Relic account. This key binds the Python Agent's data to your
# account in the New Relic service.
#
# IMPORTANT: Do NOT set license_key here, or it will override the environment variable.
# Use the NEW_RELIC_LICENSE_KEY environment variable instead.
#
# license_key = your-license-key-here  # Commented out to allow environment variable to work

# The application name. Set this to be the name of your
# application as you would like it to show up in New Relic UI.
# The UI will then auto-map instances of your application into a
# entry on your home dashboard.
app_name = Flask-EC-Distributed-Service

# When "true", the agent collects performance data about your
# application and reports this data to the New Relic UI at
# newrelic.com. This global switch is normally overridden for
# each environment below.
monitor_mode = true

# Sets the name of a file to log agent messages to. Useful for
# debugging any issues with the agent. This is not set by
# default as it is not known in advance what user your web
# application processes will run as and where they have
# permission to write to. Whatever you set this to you must
# ensure that the permissions for the containing directory and
# the file itself are correct, and that the user that your web
# application runs as can write to the file. If you wish New Relic
# agent messages to go to standard out, rather than a log file,
# then set this to "stdout".
log_file = /tmp/newrelic-python-agent.log

# Sets the level of detail up to which log messages for the agent
# are sent to the log file, if a log file location has been
# provided. Possible values, in increasing order of detail, are:
# "critical", "error", "warning", "info" and "debug". When
# reporting any agent issues to New Relic technical support, the
# most useful setting for the support engineers is "debug".
# However, this can generate a lot of information so it is best
# not to keep the agent at this level for longer than it takes
# to reproduce the problem you are experiencing.
log_level = debug

# High Security Mode enforces certain security settings, and prevents
# them from being overridden, so that no sensitive data is sent to New
# Relic. Enabling High Security Mode means that request parameters are
# not collected and SQL can not be sent to New Relic in its raw form.
# To activate High Security Mode, it must be set to 'true' in this
# local .ini configuration file AND be set to 'true' in the
# server-side configuration in the New Relic user interface. For
# details, see https://docs.newrelic.com/docs/subscriptions/high-security
high_security = false

# The Python Agent will attempt to connect directly to the New
# Relic service. If there is an intermediate firewall between
# your host and the New Relic service that requires you to use a
# HTTP proxy, then you should set both the "proxy_host" and
# "proxy_port" settings to the required values for the HTTP
# proxy. The "proxy_user" and "proxy_pass" settings should
# additionally be set if proxy authentication is implemented by
# the HTTP proxy. The "proxy_scheme" setting dictates what
# protocol scheme is used in talking to the HTTP proxy. This
# would normally always be "http" which will result in the
# agent then using a SSL tunnel through the HTTP proxy for end
# to end encryption.
# proxy_scheme = http
# proxy_host = hostname
# proxy_port = 8080
# proxy_user =
# proxy_pass =

# Tells the transaction tracer and error collector (when
# enabled) whether or not to capture the query string for the
# URL and any form data parameters sent via POST or PUT request
# methods.
capture_params = false

# Set to `true` to enable distributed tracing.
distributed_tracing.enabled = true

# ---------------------------------------------------------------------------

#
# The application environments. These are specific settings which
# override the common environment settings. The settings related to a
# specific environment will be used when the environment argument to the
# newrelic.agent.initialize() function has been defined to be either
# "development", "test", "staging" or "production".
#

[newrelic:development]
monitor_mode = true
app_name = Flask-EC-Distributed-Service (Development)

[newrelic:test]
monitor_mode = true
app_name = Flask-EC-Distributed-Service (Test)

[newrelic:staging]
monitor_mode = true
app_name = Flask-EC-Distributed-Service (Staging)

[newrelic:production]
monitor_mode = true
app_name = Flask-EC-Distributed-Service (Production)

# ---------------------------------------------------------------------------